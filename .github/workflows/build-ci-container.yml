name: ci

on:
  pull_request:
    branches:
      - 'develop'
    paths:
      - 'configs/github/spack.yaml'
      - '.github/workflow/build-ci-container.yaml'
    release:
      types: [published]

jobs:
  deploy-docker-container:
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      # Steps taken from the Spack CI container build workflow
      - name Checkout
        users: actions/checkout@v2

      - name: Set Container Tag (push to develop)
        run: |
          container="cajitafluids-nocuda:latest"
          echo "container=${container}" >> $GITHUB_ENV
          echo "versioned=${container}" >> $GITHUB_ENV

      - name: Set Container Tag on Release
        if: github.event_name == 'release'
        run: |
          versioned="cajitafluids-nocuda:${GITHUB_REF##*/}"
          echo "versioned=${versioned}" >> $GITHUB_ENV

      - name: Generate the Dockerfile
        run: |
          . share/spack/setup-env.sh
          cp configs/github/spack.yaml .
          spack containerize | tee Dockerfile
          printf "Preparing to build ${{ env.container }} from Dockerfile"
          if [ ! -f "Dockerfile" ]; then
              printf "Dockerfile does not exist
              exit 1;
          fi

      - name: Upload Dockerfile
        uses: actions/upload-artifact@6673cd052c4cd6fcf4b4e6e60ea986c889389535
        with:
          name: Dockerfile
          path: Dockerfile

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

# Don't log in to dockerhub since we don't use it.
#      - name: Log in to DockerHub
#        if: ${{ github.event_name != 'pull_request' }}
#        uses: docker/login-action@v1
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Deploy
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
	    ghcr.io/cup-ecs/${{ env.container }}
            ghcr.io/cup-ecs/${{ env.versioned }}
